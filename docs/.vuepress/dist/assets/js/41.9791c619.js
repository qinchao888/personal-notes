(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{159:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"你不知道的浏览器页面渲染机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你不知道的浏览器页面渲染机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 你不知道的浏览器页面渲染机制")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000018811208",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("浏览器内核包括两个部分：JS引擎和渲染引擎。")]),t._v(" "),a("p",[t._v("页面加载过程：")]),t._v(" "),a("ol",[a("li",[t._v("浏览器根据DNS服务器得到域名的IP地址。")]),t._v(" "),a("li",[t._v("向这个IP地址的机器发球HTTP请求。")]),t._v(" "),a("li",[t._v("服务器收到，处理并返回HTTP请求。")]),t._v(" "),a("li",[t._v("浏览器得到返回的内容。")])]),t._v(" "),a("h3",{attrs:{id:"回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流和重绘","aria-hidden":"true"}},[t._v("#")]),t._v(" 回流和重绘")]),t._v(" "),a("p",{staticClass:"fg_th"},[t._v("减少回流和重绘对性能的影响？")]),t._v(" "),a("p",{staticClass:"fb_th"},[t._v("1. 动画效果应用到position属性为absolute或fixed的元素上。")]),t._v(" "),a("p",[t._v("动画效果应用到position属性为absolute或fixed的元素上，它们不影响其他元素的布局，只会导致重新绘制，而不是一个完整回流。消耗会更低。")]),t._v(" "),a("p",{staticClass:"fb_th"},[t._v("2. css3硬件加速（GPU加速）。")]),t._v(" "),a("p",[t._v("使用css3硬件加速，设置 transform、opacity、filter、will-change 这些属性不会引起回流重绘。")]),t._v(" "),a("p",{staticClass:"fb_th"},[t._v("3. 合并多次对DOM和样式的修改。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("每个样式的修改都会引起回流，大部分现代浏览器都对其做了优化，因此，只会触发一次重排。但是如果在旧版的浏览器或者在上面代码执行的时候，有其他代码访问了布局信息(上文中的会触发回流的布局信息)，那么就会导致三次重排。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解决方案")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border-left: 1px; border-right: 2px; padding: 5px;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"css3硬件加速带来的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3硬件加速带来的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" css3硬件加速带来的问题")]),t._v(" "),a("ol",[a("li",[t._v("不能让每个元素都启用硬件加速，这样会暂用很大的内存，使页面会有很强的卡顿感。")]),t._v(" "),a("li",[t._v("GPU渲染会影响字体的抗锯齿效果。这是因为GPU和CPU具有不同的渲染机制，即使最终硬件加速停止了，文本还是会在动画期间显示得很模糊。")])]),t._v(" "),a("p",[t._v("css3硬件加速：通过GPU进行渲染，解放cpu。")]),t._v(" "),a("p",[t._v("设置了transform会创建一个图层，使用GPU去执行transform操作，该图层又称为复合图层。")]),t._v(" "),a("p",{staticClass:"fg_th"},[t._v("创建层的条件：")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("条件")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("3D 或透视变换(perspective transform) CSS 属性\n使用加速视频解码的 元素")])]),t._v(" "),a("li",[a("p",[t._v("拥有 3D (WebGL) 上下文或加速的 2D 上下文的 元素\n混合插件(如 Flash)")])]),t._v(" "),a("li",[a("p",[t._v("对自己的 opacity 做 CSS 动画或使用一个动画 webkit 变换的元素")])]),t._v(" "),a("li",[a("p",[t._v("拥有加速 CSS 过滤器的元素(filter)")])]),t._v(" "),a("li",[a("p",[t._v("元素有一个包含复合层的后代节点(换句话说，就是一个元素拥有一个子元素，该子元素在自己的层里)")])]),t._v(" "),a("li",[a("p",[t._v("元素有一个 z-index 较低的并且是一个复合层的兄弟元素")])])])]),t._v(" "),a("p",[t._v("存在一个元素，其兄弟元素在复合层中并且其z-index较小，那么复合层后使用相对或绝对定位的元素"),a("span",{staticClass:"fb_th"},[t._v("可能")]),t._v("会被放在复合层中。导致页面卡顿。")]),t._v(" "),a("p",[t._v("解决方案：给当前处于复合层的元素设置"),a("span",{staticClass:"fb_th"},[t._v(" position:relative; z-index:1; ")]),t._v("即可。")]),t._v(" "),a("p",{staticClass:"fb_th"},[t._v("查看：More tools -> Rendering -> Layer borders，黄色的边框表示一个复合层。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://div.io/topic/1348",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"浏览器渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器渲染过程")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("解析HTML生成DOM树，解析CSS生成CSSOM树。")])]),t._v(" "),a("li",[a("p",[t._v("将DOM树和CSSOM树结合，生成渲染树(Render Tree)。")])]),t._v(" "),a("li",[a("p",[t._v("Layout(回流):根据生成的渲染树，进行回流(Layout)，得到节点的几何信息（位置，大小）。")])]),t._v(" "),a("li",[a("p",[t._v("Painting(重绘):根据渲染树以及回流得到的几何信息，得到节点的绝对像素。")])]),t._v(" "),a("li",[a("p",[t._v("Display:将像素发送给GPU，展示在页面上。（涉及GPU将多个合成层合并为同一个层，并展示在页面中。而css3硬件加速的原理则是新建合成层）。")])])]),t._v(" "),a("h4",{attrs:{id:"构建渲染树过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建渲染树过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 构建渲染树过程")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("从DOM树的根节点开始遍历每个可见节点。")])]),t._v(" "),a("li",[a("p",[t._v("对于每个可见的节点，找到CSSOM树中对应的规则，并应用它们。")])]),t._v(" "),a("li",[a("p",[t._v("根据每个可见节点以及其对应的样式，组合生成渲染树。")])])]),t._v(" "),a("h4",{attrs:{id:"不可见的节点包括："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不可见的节点包括：","aria-hidden":"true"}},[t._v("#")]),t._v(" 不可见的节点包括：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("一些不会渲染输出的节点，比如script、meta、link等。")])]),t._v(" "),a("li",[a("p",[t._v("一些通过css进行隐藏的节点。比如display:none。注意，利用visibility和opacity隐藏的节点，还是会显示在渲染树上的。只有display:none的节点才不会显示在渲染树上。")])])]),t._v(" "),a("h3",{attrs:{id:"dom操作影响性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom操作影响性能","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM操作影响性能")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("JS 操作依赖 JS 引擎，DOM 属于渲染引擎，JS操作DOM，本质上是 JS 引擎和渲染引擎之间进行了“跨界交流”。")])]),t._v(" "),a("li",[a("p",[t._v("DOM操作可能会引起页面的回流和重绘，导致性能问题。")])])]),t._v(" "),a("h3",{attrs:{id:"domcontentloaded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded","aria-hidden":"true"}},[t._v("#")]),t._v(" DOMContentLoaded")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在页面加载和解析完成后触发。")])]),t._v(" "),a("li",[a("p",[t._v("触发时机在 onload 事件之前。")])]),t._v(" "),a("li",[a("p",[t._v("在页面JS（非动态插入的JS脚本）执行完成后触发，不包括图片加载完成。")])]),t._v(" "),a("li",[a("p",[t._v("如果其所属 script 标签前引入 css，则必须等样式表加载解析完成才会触发。如果在 script 之后引入样式则不会。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);