(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{289:function(t,a,s){"use strict";s.r(a);var v=s(28),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("总结")]),t._v(" "),s("p",[t._v("HTTP协议是无状态协议，不保存请求和相应的通信状态，从而可以更快的处理更多的事务，确保协议的可升缩性，减少了服务器的CPU和内存资源的消耗。为了实现保存状态的功能，使用了Cookie技术。")])]),t._v(" "),s("h2",{attrs:{id:"浏览器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000022596286",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("强效缓存")]),t._v(" "),s("li",[t._v("协商缓存")])]),t._v(" "),s("p",[t._v("强效缓存分为Disk Cache（存放在硬盘） 和 Memory Cache（存放在内存）。由 Header 中的 Expires、Cache-Control、Progma 三个属性控制。优先级为：Progma > Cache-Control > Expires。")]),t._v(" "),s("p",[t._v("协商缓存由 ETag/If-None-Match 和 Last-Modified/If-Modified-Since 控制。")]),t._v(" "),s("p",[t._v("Disk Cache：由于在存储在硬盘上，进程结束，数据依旧存在。")]),t._v(" "),s("p",[t._v("Memory Cache：由于是存储内存中，进程结束（浏览器关闭），数据不复存在。")]),t._v(" "),s("p",[t._v("一般脚本、字体、图片会存在内存当中，css 存储在硬盘上。")]),t._v(" "),s("h3",{attrs:{id:"为什么一般-css-存储在硬盘上，而脚本存储在内存中？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么一般-css-存储在硬盘上，而脚本存储在内存中？"}},[t._v("#")]),t._v(" 为什么一般 css 存储在硬盘上，而脚本存储在内存中？")]),t._v(" "),s("p",[t._v("原因：css样式加载一次即可渲染出页面。但是脚本可能会随时执行，如果把脚本存在磁盘中，在执行时会把该脚本从磁盘中提取到缓存中来，这样的IO开销比较大，有可能会导致浏览器失去响应。")]),t._v(" "),s("h3",{attrs:{id:"三级缓存原理-访问缓存优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三级缓存原理-访问缓存优先级"}},[t._v("#")]),t._v(" 三级缓存原理(访问缓存优先级)")]),t._v(" "),s("ol",[s("li",[t._v("先在内存中查找，如果有，直接加载。")]),t._v(" "),s("li",[t._v("如果内存中不存在，则在硬盘中查找，如果有直接加载。")]),t._v(" "),s("li",[t._v("如果硬盘中也没有，那么就进行网络请求。")]),t._v(" "),s("li",[t._v("请求获取的资源缓存到硬盘和内存。")])]),t._v(" "),s("h3",{attrs:{id:"浏览器再次访问一个已经访问过的资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器再次访问一个已经访问过的资源"}},[t._v("#")]),t._v(" 浏览器再次访问一个已经访问过的资源")]),t._v(" "),s("ol",[s("li",[t._v("是否命中强缓存，如果命中，直接使用缓存。")]),t._v(" "),s("li",[t._v("如果没有命中强缓存，就发请求到服务器检查是否命中协商缓存。")]),t._v(" "),s("li",[t._v("如果命中协商缓存，服务器会返回 304 告诉浏览器使用本地缓存。")]),t._v(" "),s("li",[t._v("否则，返回最新的资源。")])]),t._v(" "),s("h3",{attrs:{id:"浏览器缓存的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存的优点"}},[t._v("#")]),t._v(" 浏览器缓存的优点")]),t._v(" "),s("ol",[s("li",[t._v("减少了冗余的数据传输。")]),t._v(" "),s("li",[t._v("减少了服务器压力。")]),t._v(" "),s("li",[t._v("提高了客户端网页的加载速度。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);